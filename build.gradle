buildscript {
    ext {
        springBootVersion = '2.2.6.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}

plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'idea'
}

bootJar {
    enabled(true)
//    mainClassName = 'club.csmrobotics.WSSApplication'
}

bootRun {
    enabled(true)
//    main = 'club.csmrobotics.wss.WSSApplication'
}




allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    group 'club.csmrobotics'
    version '1.0-SNAPSHOT'

    jar {
        enabled(true)
    }
    sourceCompatibility = '11'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
}

subprojects {

//    bootJar {
//        enabled = false
//    }

    ext.useSpring = {

        dependencies {
            implementation('org.springframework.boot:spring-boot-starter')
            implementation('org.springframework.boot:spring-boot-starter-aop')
//            implementation('org.springframework.boot:spring-boot-starter-security')
            implementation('org.springframework.boot:spring-boot-starter-data-jpa')
            implementation('org.springframework.boot:spring-boot-starter-actuator')
            runtimeOnly('org.springframework.boot:spring-boot-devtools')
            testImplementation('org.springframework.boot:spring-boot-starter-test')
//            testImplementation('org.springframework.security:spring-security-test')
        }
    }

    ext.useSpringWeb = {
        configurations {
            providedRuntime
        }

        dependencies {
            implementation('org.springframework.boot:spring-boot-starter-web')
            implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
            providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
        }
    }

    ext.useSpringIO = {
        dependencies {
            implementation('org.springframework.boot:spring-boot-starter-mail')
            implementation('org.springframework.shell:spring-shell-starter:${springBootVersion}')
        }
    }

    ext.useSpringSecurity = {
        dependencies {
            implementation('org.springframework.boot:spring-boot-starter-security')
            implementation('org.springframework.security:spring-security-test')
            compile('com.auth0:java-jwt:3.8.1')
        }
    }

    ext.useSpringData = {
        dependencies {
            compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
            compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
//            implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
        }
    }

    ext.useCommons = {
        dependencies {
            compileOnly 'org.projectlombok:lombok:1.18.12'
            annotationProcessor 'org.projectlombok:lombok:1.18.12'
            compile 'com.typesafe:config:1.4.0'

            testCompileOnly 'org.projectlombok:lombok:1.18.12'
            testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
        }
    }
}
